{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/wetweet.js","components/WetweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Wetweet","wetweetObj","isOwner","editing","setEditing","text","newWetweet","setNewWetweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","WetweetFactory","userObj","wetweet","setWetweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","alt","backgroundImage","faTimes","Home","wetweets","setWetweets","useEffect","onSnapshot","snapshot","wetweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","profilePic","newProfilePic","setNewProfilePic","getMyWetweets","where","orderBy","get","photoPath","ProfilePic","photoURL","photoURLRef","updateProfile","maxWidth","width","margin","display","justifyContent","alignItems","flexDirection","height","borderRadius","signOut","push","Navigation","to","marginRight","marginLeft","fontSize","faUser","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.046caec4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n// db\nexport const dbService = firebase.firestore();\n// storage (image 및 비디오 저장소)\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // Create Account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // Log In\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\"> {error} </span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Wetweet = ({ wetweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newWetweet, setNewWetweet] = useState(wetweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this this?\");\n    if (ok) {\n      // Delete Wetweet\n      await dbService.doc(`wetweets/${wetweetObj.id}`).delete();\n      await storageService\n        .refFromURL(wetweetObj.attachmentUrl)\n        .firebase.storage.delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`wetweets/${wetweetObj.id}`).update({\n      text: newWetweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewWetweet(value);\n  };\n  return (\n    <div className=\"wetweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container wetweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your Wetweet\"\n                  value={newWetweet}\n                  required\n                  onChange={onChange}\n                  autoFocus\n                  className=\"formInput\"\n                />\n                <input\n                  type=\"submit\"\n                  value=\"Update Wetweet\"\n                  className=\"formBtn\"\n                />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{wetweetObj.text}</h4>\n          {wetweetObj.attachmentUrl && <img src={wetweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"wetweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Wetweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst WetweetFactory = ({ userObj }) => {\n  const [wetweet, setWetweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (wetweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const wetweetObj = {\n      text: wetweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"wetweets\").add(wetweetObj);\n    setWetweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setWetweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={wetweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos </span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      <input type=\"submit\" value=\"Wetweet\" />\n      {attachment && (\n        // attachment가 있을 때만 보이도록\n        <div className=\"factoryForm__attachment\">\n          <img\n            alt=\"preview\"\n            src={attachment}\n            style={{ backgroundImage: attachment }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default WetweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Wetweet from \"components/wetweet\";\nimport WetweetFactory from \"components/WetweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [wetweets, setWetweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"wetweets\").onSnapshot((snapshot) => {\n      const wetweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setWetweets(wetweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <WetweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {wetweets.map((wetweet) => (\n          <Wetweet\n            key={wetweet.id}\n            wetweetObj={wetweet}\n            isOwner={wetweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [newProfilePic, setNewProfilePic] = useState(userObj.profilePic);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const getMyWetweets = async () => {\n    const wetweets = await dbService\n      .collection(\"wetweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n\n    console.log(wetweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyWetweets();\n  }, []);\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n\n    // 여러 파일을 가져올 수 있지만 input은\n    // 하나의 파일만 허용하므로 첫 번째 파일을 가져온다.\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n\n      setNewProfilePic(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let photoPath = \"\";\n    // 유저이름혹은 프로필 사진이 변경되지않으면 작동하지않도록\n    if (\n      userObj.displayName !== newDisplayName ||\n      userObj.ProfilePic !== newProfilePic\n    ) {\n      try {\n        if (userObj.photoURL !== newProfilePic) {\n          const photoURLRef = storageService\n            .ref()\n            .child(`${userObj.uid}/${uuidv4()}`);\n\n          const response = await photoURLRef.putString(\n            newProfilePic,\n            \"data_url\"\n          );\n          photoPath = await response.ref.getDownloadURL();\n\n          await userObj.updateProfile({\n            displayName: newDisplayName,\n            profilePic: photoPath,\n          });\n        }\n        await userObj.updateProfile({\n          displayName: newDisplayName,\n        });\n\n        refreshUser();\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  return (\n    <div\n      style={{\n        maxWidth: 890,\n        width: \"100%\",\n        margin: \"0 auto\",\n        marginTop: 80,\n        display: \"flex\",\n        justifyContent: \"center\",\n        color: \"black\",\n      }}\n    >\n      <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            {newProfilePic ? (\n              <img\n                src={newProfilePic}\n                width=\"100px\"\n                height=\"100px\"\n                alt=\"profileImage\"\n                style={{ borderRadius: \"50%\" }}\n              />\n            ) : (\n              <img\n                src=\"https://lh3.googleusercontent.com/proxy/m4bOSiyaKmuhH0faWpGGxfYoBlCGVbwGTzdduGm5nLu65bcV7z8YL0sNJvjEn14rxIfKKn0KNN0URxOQvY66dVP03IOtda3gwHlU40747FPzBE09geQ9ciFj8vUagyBKua1BeirREwVqVoHdfhQFuByxRcLGIDMA\"\n                width=\"100px\"\n                height=\"100px\"\n                alt=\"profileImage\"\n                style={{ borderRadius: \"50%\" }}\n              />\n            )}\n\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n              <span>Change photos</span>\n              <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n              id=\"attach-file\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={onFileChange}\n              style={{\n                opacity: 0,\n              }}\n            />\n          </div>\n\n          <input\n            onChange={onChange}\n            type=\"text\"\n            autoFocus\n            placeholder=\"Display name\"\n            value={newDisplayName}\n            className=\"formInput\"\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Profile\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          Log Out\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}'s Profile`\n              : \"profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Wetwitter </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}